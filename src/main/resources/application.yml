

# 数据库访问配置
# 主数据源，默认的
spring:
  datasource:
   type: com.alibaba.druid.pool.DruidDataSource
   driver-class-name: com.mysql.jdbc.Driver
   url: jdbc:mysql://47.92.32.247:3306/blog?useUnicode=true&characterEncoding=utf-8&allowMultiQueries=true&useSSL=false
   username: blog
   password: 123456qA!

# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
   initialSize: 5
   minIdle: 5
   maxActive: 20
# 配置获取连接等待超时的时间
   maxWait: 60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
   timeBetweenEvictionRunsMillis: 60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
   minEvictableIdleTimeMillis: 300000
   validationQuery: SELECT 1 FROM DUAL
   testWhileIdle: true
   testOnBorrow: false
   testOnReturn: false
# 打开PSCache，并且指定每个连接上PSCache的大小
   poolPreparedStatements: true
   maxPoolPreparedStatementPerConnectionSize: 20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
   filters: stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
   connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
#   useGlobalDataSourceStat: true
#控制读取sql文件是哪个
   platform: debug
#是否进行脚本初始化
   initialize: false
  jpa:
    generate-ddl: true
    open-in-view: true
#    show-sql: true
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
#        show_sql: true
        format_sql: true
  mvc:
      date-format: yyyy-MM-dd
      favicon:
        enabled: true
      view:
        suffix: .html
logging:
  level:
    org.hibernate.SQL: trace
    org.hibernate.type: trace
    com.piggsoft: debug
server:
  port: 8099